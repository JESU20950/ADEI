res.pca<-PCA(df[,c(1:10,21:d2-2,d2)],quali.sup=c(1:10),quanti.sup=c(21:14, 33))
res.pca<-PCA(df[,c(1:10,21:d2-2,d2)],quali.sup=c(1:10),quanti.sup=c(21:14, 33))
res.pca<-PCA(df[,c(1:10,21:d2-2,d2)],quali.sup=c(1:10),quanti.sup=c(21:24, d2))
res.pca<-PCA(df[,c(1:10,21:d2-2,d2)],quali.sup=c(1:10),quanti.sup=c(w:w+4, d2))
res.pca<-PCA(df[,c(1:10,19:d2-2,d2)],quali.sup=c(1:10), ncp=5)
res.pca<-PCA(df[,c(1:10,19:d2-2,d2)],quali.sup=c(1:10), ncp=5)
res.pca<-PCA(df[,c(1:10,21:d2-2,d2)],quali.sup=c(1:10), ncp=5)
res.pca<-PCA(df[,c(1:10,20:d2-2,d2)],quali.sup=c(1:10), ncp=5)
res.pca<-PCA(df[,c(1:10,21:d2-2,d2)],quali.sup=c(1:10), ncp=5)
names(df)[21]
names(df)
res.pca<-PCA(df[,c(1:10,19:d2-2,d2)],quali.sup=c(1:10), ncp=5)
c(1:10,19:d2-2,d2)
19:d2-2
19:(d2-2)
17:(d2-2)
res.pca<-PCA(df[,c(1:10,17:(d2-2),d2)],quali.sup=c(1:10), ncp=5)
17:(d2-2)
names(df)
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10), ncp=5)
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2-1:d2)],quali.sup=c(1:10), ncp=5)
d2-1:d2
d2-1
d2
res.pca<-PCA(df[,c(1:10,19:(d2-2),(d2-1):d2)],quali.sup=c(1:10), ncp=5)
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10), ncp=5)
res.pca
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(19:(d2-2),d2), ncp=5)
w <-which(names(df) == "Pickup_longitude")
names(df)
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(w:(w+3),d2), ncp=5)
c(w:(w+3),d2)
c(1:10,19:(d2-2),d2)
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(21,22,23,24,d2), ncp=5)
w <-which(names(df) == "tlenkm")
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(20,d2), ncp=5)
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(d2), ncp=5)
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(w), ncp=5)
View(df)
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(w,d2), ncp=5)
w <-which(names(df) == "Total_amount")
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(w,33), ncp=5)
c(1:10,19:(d2-2),d2)
w1 <-which(names(df) == "traveltime")
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(w1,w2), ncp=5)
w1 <-which(names(df) == "tlenkm")
w2 <-which(names(df) == "traveltime")
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(w1,w2), ncp=5)
w2 <-which(names(df) == "traveltime")
length(c(1:10,19:(d2-2),d2))
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(11:24), ncp=5)
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(11:16,24), ncp=5)
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(13:16,24), ncp=5)
#Todas las categoricas como suplementarias. Numericas suplementarias: Pickup_longitude, Pickup_latitude, Dropoff_longitude, Dropoff_latitude, total_amount
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(13:16,24), ncp=5)
#Todas las categoricas como suplementarias. Numericas suplementarias: Pickup_longitude, Pickup_latitude, Dropoff_longitude, Dropoff_latitude, total_amount
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(13:16,24), ncp=5)
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("ind"),invisible=c("ind"))
?plot.PCA
?plot.PCA
### I. Eigenvalues and dominant axes. How many axes we have to interpret? ###
names(res.pca)
### I. Eigenvalues and dominant axes. How many axes we have to interpret? ###
names(res.pca)
summary(res.pca) # Customization is needed
summary(res.pca,nb.dec=2,nbind=1,nbelements=1000,ncp=5)
#Todas las categoricas como suplementarias. Numericas suplementarias: Pickup_longitude, Pickup_latitude, Dropoff_longitude, Dropoff_latitude, total_amount
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(13:16,24), ncp=5)
res.pca
#Todas las categoricas como suplementarias. Numericas suplementarias: Pickup_longitude, Pickup_latitude, Dropoff_longitude, Dropoff_latitude, total_amount
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(13:16,24), ncp=4)
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("ind"),invisible=c("ind"))
?plot.PCA
?plot.PCA
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("ind"),invisible=c("ind"))
### I. Eigenvalues and dominant axes. How many axes we have to interpret? ###
names(res.pca)
summary(res.pca) # Customization is needed
summary(res.pca,nb.dec=2,nbind=1,nbelements=1000,ncp=5)
library(factoextra)
library(ggpubr)
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
fviz_pca_var(res.pca, col.var = "steelblue")
library("corrplot")
corrplot(res.pca$var$cos2, is.corr=FALSE)
fviz_cos2(res.pca, choice = "var", axes = 1:2)
# Color by cos2 values: quality on the factor map
fviz_pca_var(res.pca, col.var = "cos2", gradient.cols = c("white", "blue", "red"), repel = TRUE, legend.title="Nice plot") # Avoid text overlapping
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1:2, top = 10)
vars_dis <- c("VendorID", "Payment_type", "Store_and_fwd_flag",  "RateCodeID", "f.Extra", "f.MTA_tax", "f.Improvement_surcharge", "lpep_pickup_period", "Trip_type", "lpep_pickup_date", "multiouts", "f.espeed", "f.tlenkm", "f.traveltime", "f.distHaversine", "AnyToll", "f.Fare_amount", "f.Passenger_count")
vars_con <- c( "Passenger_count", "tlenkm", "Pickup_longitude", "Pickup_latitude", "Dropoff_longitude", "Dropoff_latitude","Fare_amount", "espeed", "Tip_amount", "Tolls_amount", "lpep_pickup_time", "traveltime", "distHaversine")
for( i in vars_dis){
df[,i] <- as.factor(df[,i])
}
vars_res <- c("AnyTip", "Total_amount")
d1 <- dim(df)[1]
d2 <- dim(df)[2]
df[,d2-1] <- as.factor(df[,d2-1])
#Todas las categoricas como suplementarias. Numericas suplementarias: Pickup_longitude, Pickup_latitude, Dropoff_longitude, Dropoff_latitude, total_amount
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(13:16,24), ncp=5)
# Multivariant outliers should be included as supplementary observations
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("ind"),invisible=c("ind"))
### I. Eigenvalues and dominant axes. How many axes we have to interpret? ###
names(res.pca)
summary(res.pca) # Customization is needed
summary(res.pca,nb.dec=2,nbind=1,nbelements=1000,ncp=5)
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("ind"),invisible=c("ind"))
res.hcpc<-HCPC(res.pca,order=TRUE)
res.hcpc<-HCPC(res.pca,order=TRUE)
## Classification
## HCPC
res.hcpc<-HCPC(res.pca,order=TRUE)
res.hcpc<-HCPC(res.pca,order=TRUE)
# Load Required Packages: to be increased over the course
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","ggplot2","dplyr","ggmap","ggthemes","knitr","ggpubr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#setwd("C:/Users/carle/Desktop/ADEI2")
#filepath<-"C:/Users/carle/Desktop/ADEI2/"
setwd("~/Desktop/ADEI/Labs/DeliverableII")
df <- read.table("Deliverable1.csv",header=T, sep=",");
vars_dis <- c("VendorID", "Payment_type", "Store_and_fwd_flag",  "RateCodeID", "f.Extra", "f.MTA_tax", "f.Improvement_surcharge", "lpep_pickup_period", "Trip_type", "lpep_pickup_date", "multiouts", "f.espeed", "f.tlenkm", "f.traveltime", "f.distHaversine", "AnyToll", "f.Fare_amount", "f.Passenger_count")
vars_con <- c( "Passenger_count", "tlenkm", "Pickup_longitude", "Pickup_latitude", "Dropoff_longitude", "Dropoff_latitude","Fare_amount", "espeed", "Tip_amount", "Tolls_amount", "lpep_pickup_time", "traveltime", "distHaversine")
for( i in vars_dis){
df[,i] <- as.factor(df[,i])
}
vars_res <- c("AnyTip", "Total_amount")
d1 <- dim(df)[1]
d2 <- dim(df)[2]
df[,d2-1] <- as.factor(df[,d2-1])
#Todas las categoricas como suplementarias. Numericas suplementarias: Pickup_longitude, Pickup_latitude, Dropoff_longitude, Dropoff_latitude, total_amount
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(13:16,24), ncp=5)
# Multivariant outliers should be included as supplementary observations
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("ind"),invisible=c("ind"))
### I. Eigenvalues and dominant axes. How many axes we have to interpret? ###
names(res.pca)
summary(res.pca) # Customization is needed
summary(res.pca,nb.dec=2,nbind=1,nbelements=1000,ncp=5)
library(factoextra)
library(ggpubr)
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
fviz_pca_var(res.pca, col.var = "steelblue")
library("corrplot")
corrplot(res.pca$var$cos2, is.corr=FALSE)
fviz_cos2(res.pca, choice = "var", axes = 1:2)
# Color by cos2 values: quality on the factor map
fviz_pca_var(res.pca, col.var = "cos2", gradient.cols = c("white", "blue", "red"), repel = TRUE, legend.title="Nice plot") # Avoid text overlapping
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1:2, top = 10)
res.hcpc<-HCPC(res.pca,order=TRUE)
res.hcpc<-HCPC(res.pca,order=TRUE)
res.hcpc<-HCPC(res.pca,order=TRUE)
res.hcpc<-HCPC(res.pca,order=TRUE)
res.hcpc<-HCPC(res.pca,order=TRUE)
View(res.pca)
res.hcpc<-HCPC(res.pca,order=TRUE)
res.pca
summary(res.pca)
names(res.hcpc)
res.hcpc<-HCPC(res.pca,order=TRUE)
HCPC(res.pca,order=TRUE)
HCPC(res.pca,order=TRUE)
names(res.hcpc)
res.hcpc<-HCPC(res.pca,order=TRUE)
HCPC(res.pca,order=TRUE)
res.hcpc<-HCPC(res.pca,order=TRUE)
names(res.hcpc)
res.hcpc$desc.axes
res.hcpc$desc.var
res.hcpc$desc.ind
summary(res.hcpc$data.clust$clust)
### desc.var ###
### A. The description of the clusters by the variables ###
names(res.hcpc$desc.var)
### desc.var$test.chi2 ###
### A.1. The categorical variables which characterizes the clusters ###
res.hcpc$desc.var$test.chi2
### desc.var$category ###
### A.2. The description of each cluster by the categories ##
res.hcpc$desc.var$category
### desc.var$quanti.var ###
### A.3. The quantitative variables which characterizes the clusters ###
res.hcpc$desc.var$quanti.var
### desc.var$quanti ###
### A.4. The description of each cluster by the quantitative variables ###
res.hcpc$desc.var$quanti
### desc.axes ###
### B. The description of the clusters by the axes ###
names(res.hcpc$desc.axes)
res.hcpc$desc.axes$quanti.var
res.hcpc$desc.axes$quanti
### desc.ind ###
### C. The description of the clusters by the individuals ###
names(res.hcpc$desc.ind)
res.hcpc$desc.ind$para
res.hcpc$desc.ind$dist
# Examinar los valores de los individuos que caracterizan a las clases
#### Characteristic individuals
para1<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[1]]))
para2<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[2]]))
para3<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[3]]))
dist1<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[1]]))
# Examinar los valores de los individuos que caracterizan a las clases
#### Characteristic individuals
para1<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[1]]))
para2<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[2]]))
para3<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[3]]))
dist1<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[1]]))
dist2<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[2]]))
dist3<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[3]]))
plot(res.pca,label="none",invisible=c("quali","ind.sup"))  # Potser no us va
points(res.pca$ind$coord[para1,1],res.pca$ind$coord[para1,2],col="blue",cex=2,pch=16)
points(res.pca$ind$coord[dist1,1],res.pca$ind$coord[dist1,2],col="orange",cex=2,pch=16)
points(res.pca$ind$coord[para2,1],res.pca$ind$coord[para2,2],col="blue",cex=2,pch=16)
points(res.pca$ind$coord[dist2,1],res.pca$ind$coord[dist2,2],col="orange",cex=2,pch=16)
points(res.pca$ind$coord[para3,1],res.pca$ind$coord[para3,2],col="blue",cex=2,pch=16)
points(res.pca$ind$coord[dist3,1],res.pca$ind$coord[dist3,2],col="orange",cex=2,pch=16)
res.hcpc$data.clust[which(rownames(res.hcpc$data.clust)%in%names(res.hcpc$desc.ind$para[[1]])),]
res.hcpc$data.clust[which(rownames(res.hcpc$data.clust)%in%names(res.hcpc$desc.ind$dist[[1]])),]
res.hcpc$data.clust[which(rownames(res.hcpc$data.clust)%in%names(res.hcpc$desc.ind$para[[2]])),]
res.hcpc$data.clust[which(rownames(res.hcpc$data.clust)%in%names(res.hcpc$desc.ind$dist[[2]])),]
# Partition quality
#(res.hcpc$call$t$within[1]-res.hcpc$call$t$within['nb.clusters'])/res.hcpc$call$t$within[1]
(res.hcpc$call$t$within[1]-res.hcpc$call$t$within[6])/res.hcpc$call$t$within[1]
### Results for the hierarchical tree ###
names(res.hcpc$call$t)
### The suggested level to cut the tree  ###
res.hcpc$call$t$nb.clust
### Within inertias ###
res.hcpc$call$t$within[1:6]
### Ratio between within inertias ###
res.hcpc$call$t$quot[1:6]
### Inertia gain ###
res.hcpc$call$t$inert.gain[1:6]
df$hcpck<-res.hcpc$data.clust$clust
####
#### THE END
####
## Classification
```{r}
res.pca<-PCA(df[,1:23],quali.sup=c(1,2,16,22:23),quanti.sup= c(3:6,15),ncp=5,graph=FALSE)
ppcc<-res.pca$ind$coord[,1:5]
dim(ppcc)
# Load Required Packages: to be increased over the course
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","ggplot2","dplyr","ggmap","ggthemes","knitr","ggpubr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#setwd("C:/Users/carle/Desktop/ADEI2")
#filepath<-"C:/Users/carle/Desktop/ADEI2/"
setwd("~/Desktop/ADEI/Labs/DeliverableII")
df <- read.table("Deliverable1.csv",header=T, sep=",");
vars_dis <- c("VendorID", "Payment_type", "Store_and_fwd_flag",  "RateCodeID", "f.Extra", "f.MTA_tax", "f.Improvement_surcharge", "lpep_pickup_period", "Trip_type", "lpep_pickup_date", "multiouts", "f.espeed", "f.tlenkm", "f.traveltime", "f.distHaversine", "AnyToll", "f.Fare_amount", "f.Passenger_count")
vars_con <- c( "Passenger_count", "tlenkm", "Pickup_longitude", "Pickup_latitude", "Dropoff_longitude", "Dropoff_latitude","Fare_amount", "espeed", "Tip_amount", "Tolls_amount", "lpep_pickup_time", "traveltime", "distHaversine")
for( i in vars_dis){
df[,i] <- as.factor(df[,i])
}
vars_res <- c("AnyTip", "Total_amount")
d1 <- dim(df)[1]
d2 <- dim(df)[2]
df[,d2-1] <- as.factor(df[,d2-1])
#Todas las categoricas como suplementarias. Numericas suplementarias: Pickup_longitude, Pickup_latitude, Dropoff_longitude, Dropoff_latitude, total_amount
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(13:16,24), ncp=5)
# Multivariant outliers should be included as supplementary observations
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("ind"),invisible=c("ind"))
### I. Eigenvalues and dominant axes. How many axes we have to interpret? ###
names(res.pca)
summary(res.pca) # Customization is needed
summary(res.pca,nb.dec=2,nbind=1,nbelements=1000,ncp=5)
library(factoextra)
library(ggpubr)
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
fviz_pca_var(res.pca, col.var = "steelblue")
library("corrplot")
corrplot(res.pca$var$cos2, is.corr=FALSE)
fviz_cos2(res.pca, choice = "var", axes = 1:2)
# Color by cos2 values: quality on the factor map
fviz_pca_var(res.pca, col.var = "cos2", gradient.cols = c("white", "blue", "red"), repel = TRUE, legend.title="Nice plot") # Avoid text overlapping
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1:2, top = 10)
# Load Required Packages: to be increased over the course
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","ggplot2","dplyr","ggmap","ggthemes","knitr","ggpubr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#setwd("C:/Users/carle/Desktop/ADEI2")
#filepath<-"C:/Users/carle/Desktop/ADEI2/"
setwd("~/Desktop/ADEI/Labs/DeliverableII")
df <- read.table("Deliverable1.csv",header=T, sep=",");
vars_dis <- c("VendorID", "Payment_type", "Store_and_fwd_flag",  "RateCodeID", "f.Extra", "f.MTA_tax", "f.Improvement_surcharge", "lpep_pickup_period", "Trip_type", "lpep_pickup_date", "multiouts", "f.espeed", "f.tlenkm", "f.traveltime", "f.distHaversine", "AnyToll", "f.Fare_amount", "f.Passenger_count")
vars_con <- c( "Passenger_count", "tlenkm", "Pickup_longitude", "Pickup_latitude", "Dropoff_longitude", "Dropoff_latitude","Fare_amount", "espeed", "Tip_amount", "Tolls_amount", "lpep_pickup_time", "traveltime", "distHaversine")
for( i in vars_dis){
df[,i] <- as.factor(df[,i])
}
vars_res <- c("AnyTip", "Total_amount")
d1 <- dim(df)[1]
d2 <- dim(df)[2]
df[,d2-1] <- as.factor(df[,d2-1])
#Todas las categoricas como suplementarias. Numericas suplementarias: Pickup_longitude, Pickup_latitude, Dropoff_longitude, Dropoff_latitude, total_amount
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(13:16,24), ncp=5)
# Multivariant outliers should be included as supplementary observations
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("ind"),invisible=c("ind"))
### I. Eigenvalues and dominant axes. How many axes we have to interpret? ###
names(res.pca)
summary(res.pca) # Customization is needed
summary(res.pca,nb.dec=2,nbind=1,nbelements=1000,ncp=5)
library(factoextra)
library(ggpubr)
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
fviz_pca_var(res.pca, col.var = "steelblue")
library("corrplot")
corrplot(res.pca$var$cos2, is.corr=FALSE)
fviz_cos2(res.pca, choice = "var", axes = 1:2)
# Color by cos2 values: quality on the factor map
fviz_pca_var(res.pca, col.var = "cos2", gradient.cols = c("white", "blue", "red"), repel = TRUE, legend.title="Nice plot") # Avoid text overlapping
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1:2, top = 10)
# Load Required Packages: to be increased over the course
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("missMDA","chemometrics","mvoutlier","effects","FactoMineR","car", "factoextra","RColorBrewer","ggplot2","dplyr","ggmap","ggthemes","knitr","ggpubr")
missingPackages <- requiredPackages[!(requiredPackages %in% installed.packages()[,"Package"])]
if(length(missingPackages)) install.packages(missingPackages)
lapply(requiredPackages, require, character.only = TRUE)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
#setwd("C:/Users/carle/Desktop/ADEI2")
#filepath<-"C:/Users/carle/Desktop/ADEI2/"
setwd("~/Desktop/ADEI/Labs/DeliverableII")
df <- read.table("Deliverable1.csv",header=T, sep=",");
vars_dis <- c("VendorID", "Payment_type", "Store_and_fwd_flag",  "RateCodeID", "f.Extra", "f.MTA_tax", "f.Improvement_surcharge", "lpep_pickup_period", "Trip_type", "lpep_pickup_date", "multiouts", "f.espeed", "f.tlenkm", "f.traveltime", "f.distHaversine", "AnyToll", "f.Fare_amount", "f.Passenger_count")
vars_con <- c( "Passenger_count", "tlenkm", "Pickup_longitude", "Pickup_latitude", "Dropoff_longitude", "Dropoff_latitude","Fare_amount", "espeed", "Tip_amount", "Tolls_amount", "lpep_pickup_time", "traveltime", "distHaversine")
for( i in vars_dis){
df[,i] <- as.factor(df[,i])
}
vars_res <- c("AnyTip", "Total_amount")
d1 <- dim(df)[1]
d2 <- dim(df)[2]
df[,d2-1] <- as.factor(df[,d2-1])
#Todas las categoricas como suplementarias. Numericas suplementarias: Pickup_longitude, Pickup_latitude, Dropoff_longitude, Dropoff_latitude, total_amount
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(13:16,24), ncp=5)
# Multivariant outliers should be included as supplementary observations
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup"))
plot.PCA(res.pca,choix=c("var"),invisible=c("var"))
plot.PCA(res.pca,choix=c("var"),invisible=c("quanti.sup","var"))
plot.PCA(res.pca,choix=c("ind"),invisible=c("ind"))
### I. Eigenvalues and dominant axes. How many axes we have to interpret? ###
names(res.pca)
summary(res.pca) # Customization is needed
summary(res.pca,nb.dec=2,nbind=1,nbelements=1000,ncp=5)
library(factoextra)
library(ggpubr)
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
fviz_pca_var(res.pca, col.var = "steelblue")
library("corrplot")
corrplot(res.pca$var$cos2, is.corr=FALSE)
fviz_cos2(res.pca, choice = "var", axes = 1:2)
# Color by cos2 values: quality on the factor map
fviz_pca_var(res.pca, col.var = "cos2", gradient.cols = c("white", "blue", "red"), repel = TRUE, legend.title="Nice plot") # Avoid text overlapping
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1:2, top = 10)
res.hcpc<-HCPC(res.pca,order=TRUE)
res.hcpc<-HCPC(res.pca,order=TRUE)
names(res.hcpc)
res.hcpc$desc.axes
res.hcpc$desc.var
res.hcpc$desc.ind
summary(res.hcpc$data.clust$clust)
### desc.var ###
### A. The description of the clusters by the variables ###
names(res.hcpc$desc.var)
### desc.var$test.chi2 ###
### A.1. The categorical variables which characterizes the clusters ###
res.hcpc$desc.var$test.chi2
### desc.var$category ###
### A.2. The description of each cluster by the categories ##
res.hcpc$desc.var$category
### desc.var$quanti.var ###
### A.3. The quantitative variables which characterizes the clusters ###
res.hcpc$desc.var$quanti.var
### desc.var$quanti ###
### A.4. The description of each cluster by the quantitative variables ###
res.hcpc$desc.var$quanti
### desc.axes ###
### B. The description of the clusters by the axes ###
names(res.hcpc$desc.axes)
res.hcpc$desc.axes$quanti.var
res.hcpc$desc.axes$quanti
### desc.ind ###
### C. The description of the clusters by the individuals ###
names(res.hcpc$desc.ind)
res.hcpc$desc.ind$para
res.hcpc$desc.ind$dist
# Examinar los valores de los individuos que caracterizan a las clases
#### Characteristic individuals
para1<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[1]]))
para2<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[2]]))
para3<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$para[[3]]))
dist1<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[1]]))
dist2<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[2]]))
dist3<-which(rownames(res.pca$ind$coord)%in%names(res.hcpc$desc.ind$dist[[3]]))
plot(res.pca,label="none",invisible=c("quali","ind.sup"))  # Potser no us va
plot(res.pca,label="none",invisible=c("quali","ind.sup"))  # Potser no us va
plot(res.pca$ind$coord[,1],res.pca$ind$coord[,2],col="grey80",cex=0.5,pch=16)
plot(res.pca$ind$coord[,1],res.pca$ind$coord[,2],col="grey80",cex=0.5,pch=16)
points(res.pca$ind$coord[para1,1],res.pca$ind$coord[para1,2],col="blue",cex=2,pch=16)
points(res.pca$ind$coord[dist1,1],res.pca$ind$coord[dist1,2],col="orange",cex=2,pch=16)
points(res.pca$ind$coord[para1,1],res.pca$ind$coord[para1,2],col="blue",cex=2,pch=16)
points(res.pca$ind$coord[dist1,1],res.pca$ind$coord[dist1,2],col="orange",cex=2,pch=16)
points(res.pca$ind$coord[para2,1],res.pca$ind$coord[para2,2],col="blue",cex=2,pch=16)
points(res.pca$ind$coord[para2,1],res.pca$ind$coord[para2,2],col="blue",cex=2,pch=16)
points(res.pca$ind$coord[dist2,1],res.pca$ind$coord[dist2,2],col="orange",cex=2,pch=16)
points(res.pca$ind$coord[dist3,1],res.pca$ind$coord[dist3,2],col="orange",cex=2,pch=16)
res.hcpc$data.clust[which(rownames(res.hcpc$data.clust)%in%names(res.hcpc$desc.ind$para[[1]])),]
res.hcpc$data.clust[which(rownames(res.hcpc$data.clust)%in%names(res.hcpc$desc.ind$dist[[1]])),]
res.hcpc$data.clust[which(rownames(res.hcpc$data.clust)%in%names(res.hcpc$desc.ind$para[[2]])),]
res.hcpc$data.clust[which(rownames(res.hcpc$data.clust)%in%names(res.hcpc$desc.ind$dist[[2]])),]
# Partition quality
#(res.hcpc$call$t$within[1]-res.hcpc$call$t$within['nb.clusters'])/res.hcpc$call$t$within[1]
(res.hcpc$call$t$within[1]-res.hcpc$call$t$within[6])/res.hcpc$call$t$within[1]
### Results for the hierarchical tree ###
names(res.hcpc$call$t)
### The suggested level to cut the tree  ###
res.hcpc$call$t$nb.clust
### Within inertias ###
res.hcpc$call$t$within[1:6]
### Ratio between within inertias ###
res.hcpc$call$t$quot[1:6]
### Inertia gain ###
res.hcpc$call$t$inert.gain[1:6]
df$hcpck<-res.hcpc$data.clust$clust
####
#### THE END
####
## Classification
res.pca<-PCA(df[,1:23],quali.sup=c(1,2,16,22:23),quanti.sup= c(3:6,15),ncp=5,graph=FALSE)
res.pca<-PCA(df[,1:23],quali.sup=c(1,2,16,22:23),quanti.sup= c(3:6,15),ncp=5,graph=FALSE)
# Kmeans: Partitioning in k=7 groups
res.pca<-PCA(df[,c(1:10,19:(d2-2),d2)],quali.sup=c(1:10),quanti.sup=c(13:16,24), ncp=5, graph= FALSE)
ppcc<-res.pca$ind$coord[,1:5]
dim(ppcc)
library("factoextra")
fviz_nbclust(ppcc, kmeans, method = "gap_stat")
library("NbClust") # It takes a lot ....
set.seed(123)
res.nbclust <- NbClust(ppcc, distance = "euclidean",
min.nc = 2, max.nc = 10,
method = "complete", index ="all") # Time consuming
dist<-dist(ppcc)
kc<-kmeans(dist,6, iter.max = 30, trace=T)
df$claKM<-0
df[names(kc$cluster),"claKM"]<-kc$cluster
df$claKM<-factor(df$claKM)
kc$betweenss/kc$totss
names(df)
catdes(df,38)
