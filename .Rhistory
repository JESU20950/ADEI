path <- readChar(path, file.info(path)$size)
path <- gsub("[\r\n]", "", path)
setwd(path) #set the working directory
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
path <- "path.txt"
path <- readChar(path, file.info(path)$size)
path <- gsub("[\r\n]", "", path)
setwd(path) #set the working directory
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df
rows <- dim(df)[1]
for (k in names(df)) {
l <- (sum(is.na(df[,k])) / rows)*100
print(k)
print(l)
}
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
path <- "path.txt"
path <- readChar(path, file.info(path)$size)
path <- gsub("[\r\n]", "", path)
setwd(path) #set the working directory
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df
rows <- dim(df)[1]
for (k in names(df)) {
l <- (sum(is.na(df[,k])) / rows)*100
print(k)
print(l)
}
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
path <- "path.txt"
path <- readChar(path, file.info(path)$size)
path <- gsub("[\r\n]", "", path)
setwd(path) #set the working directory
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df
rows <- dim(df)[1]
for (k in names(df)) {
l <- (sum(is.na(df[,k])) / rows)*100
print(k)
print(l)
}
var_numericas <- c("Core_Speed", "L2_Cache", "Max_Power", "Memory", "Memory_Bandwidth", "Memory_Speed", "TMUs", "Texture_Rate")
var_binarias <- c("Dedicated", "Notebook_GPU", "SLI_Crossfire");
var_cualitativas <- c("Direct_X","Architecture", "Manufacturer", "Memory_Type", "Open_GL", "Shader", "Name", "Resolution_WxH", "Release_Date", "Memory_Bus")
vars <- c(var_numericas, var_binarias, var_cualitativas)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
path <- "path.txt"
path <- readChar(path, file.info(path)$size)
path <- gsub("[\r\n]", "", path)
setwd(path) #set the working directory
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df
rows <- dim(df)[1]
for (k in names(df)) {
l <- (sum(is.na(df[,k])) / rows)*100
print(k)
print(l)
}
var_numericas <- c("Core_Speed", "L2_Cache", "Max_Power", "Memory", "Memory_Bandwidth", "Memory_Speed", "TMUs", "Texture_Rate")
var_binarias <- c("Dedicated", "Notebook_GPU", "SLI_Crossfire");
var_cualitativas <- c("Direct_X","Architecture", "Manufacturer", "Memory_Type", "Open_GL", "Shader", "Name", "Resolution_WxH", "Release_Date", "Memory_Bus")
vars <- c(var_numericas, var_binarias, var_cualitativas)
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df[var_numericas]$Max_Power <- sub(" Watts", "", df[var_numericas]$Max_Power)
df[var_numericas]$L2_Cache <- sub("KB", "", df[var_numericas]$L2_Cache)
df[var_numericas]$L2_Cache <- as.numeric(df[var_numericas]$L2_Cache)
df$L2_Cache[df$L2_Cache == 0] <- NA
df[var_numericas]$Max_Power <- as.numeric(df[var_numericas]$Max_Power)
df[var_numericas]$Core_Speed <- sub(" MHz", "", df[var_numericas]$Core_Speed)
df$Core_Speed <- as.numeric(as.character(df$Core_Speed))
df[var_numericas]$Memory_Bandwidth <- sub("GB/sec", "", df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory_Bandwidth <- as.numeric(df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory <- sub(" MB", "", df[var_numericas]$Memory)
df[var_numericas]$Memory <- as.numeric(df[var_numericas]$Memory)
df[var_numericas]$Memory_Speed <- sub(" MHz", "", df[var_numericas]$Memory_Speed)
df[var_numericas]$Memory_Speed <- as.numeric(df[var_numericas]$Memory_Speed)
df[var_numericas]$Texture_Rate <- sub(" GTexel/s", "", df[var_numericas]$Texture_Rate)
df[var_numericas]$Texture_Rate <- as.numeric(df[var_numericas]$Texture_Rate)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
path <- "path.txt"
path <- readChar(path, file.info(path)$size)
path <- gsub("[\r\n]", "", path)
setwd(path) #set the working directory
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df
rows <- dim(df)[1]
for (k in names(df)) {
l <- (sum(is.na(df[,k])) / rows)*100
print(k)
print(l)
}
var_numericas <- c("Core_Speed", "L2_Cache", "Max_Power", "Memory", "Memory_Bandwidth", "Memory_Speed", "TMUs", "Texture_Rate")
var_binarias <- c("Dedicated", "Notebook_GPU", "SLI_Crossfire");
var_cualitativas <- c("Direct_X","Architecture", "Manufacturer", "Memory_Type", "Open_GL", "Shader", "Name", "Resolution_WxH", "Release_Date", "Memory_Bus")
vars <- c(var_numericas, var_binarias, var_cualitativas)
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df[var_numericas]$Max_Power <- sub(" Watts", "", df[var_numericas]$Max_Power)
df[var_numericas]$L2_Cache <- sub("KB", "", df[var_numericas]$L2_Cache)
df[var_numericas]$L2_Cache <- as.numeric(df[var_numericas]$L2_Cache)
df$L2_Cache[df$L2_Cache == 0] <- NA
df[var_numericas]$Max_Power <- as.numeric(df[var_numericas]$Max_Power)
df[var_numericas]$Core_Speed <- sub(" MHz", "", df[var_numericas]$Core_Speed)
df$Core_Speed <- as.numeric(as.character(df$Core_Speed))
df[var_numericas]$Memory_Bandwidth <- sub("GB/sec", "", df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory_Bandwidth <- as.numeric(df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory <- sub(" MB", "", df[var_numericas]$Memory)
df[var_numericas]$Memory <- as.numeric(df[var_numericas]$Memory)
df[var_numericas]$Memory_Speed <- sub(" MHz", "", df[var_numericas]$Memory_Speed)
df[var_numericas]$Memory_Speed <- as.numeric(df[var_numericas]$Memory_Speed)
df[var_numericas]$Texture_Rate <- sub(" GTexel/s", "", df[var_numericas]$Texture_Rate)
df[var_numericas]$Texture_Rate <- as.numeric(df[var_numericas]$Texture_Rate)
df[var_cualitativas]$Direct_X <- sub("DX ", "", df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Direct_X <- gsub("*\\.[0]+", "", df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Direct_X <- as.factor(df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Open_GL <- as.factor(df[var_cualitativas]$Open_GL)
df[var_cualitativas]$Shader <- as.factor(df[var_cualitativas]$Shader)
df[var_cualitativas]$Release_Date <- sub("\n", "", df[var_cualitativas]$Release_Date)
df[var_cualitativas]$Release_Date <- gsub(" ", "", df[var_cualitativas]$Release_Date)
df[var_cualitativas]$Memory_Bus <- sub(" Bit", "", df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Memory_Bus <- gsub(" ", "", df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Memory_Bus <- as.factor(df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Resolution_WxH <- as.factor(df[var_cualitativas]$Resolution_WxH)
df[var_cualitativas]$Manufacturer <- as.factor(df[var_cualitativas]$Manufacturer)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
path <- "path.txt"
path <- readChar(path, file.info(path)$size)
path <- gsub("[\r\n]", "", path)
setwd(path) #set the working directory
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df
rows <- dim(df)[1]
for (k in names(df)) {
l <- (sum(is.na(df[,k])) / rows)*100
print(k)
print(l)
}
var_numericas <- c("Core_Speed", "L2_Cache", "Max_Power", "Memory", "Memory_Bandwidth", "Memory_Speed", "TMUs", "Texture_Rate")
var_binarias <- c("Dedicated", "Notebook_GPU", "SLI_Crossfire");
var_cualitativas <- c("Direct_X","Architecture", "Manufacturer", "Memory_Type", "Open_GL", "Shader", "Name", "Resolution_WxH", "Release_Date", "Memory_Bus")
vars <- c(var_numericas, var_binarias, var_cualitativas)
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df[var_numericas]$Max_Power <- sub(" Watts", "", df[var_numericas]$Max_Power)
df[var_numericas]$L2_Cache <- sub("KB", "", df[var_numericas]$L2_Cache)
df[var_numericas]$L2_Cache <- as.numeric(df[var_numericas]$L2_Cache)
df$L2_Cache[df$L2_Cache == 0] <- NA
df[var_numericas]$Max_Power <- as.numeric(df[var_numericas]$Max_Power)
df[var_numericas]$Core_Speed <- sub(" MHz", "", df[var_numericas]$Core_Speed)
df$Core_Speed <- as.numeric(as.character(df$Core_Speed))
df[var_numericas]$Memory_Bandwidth <- sub("GB/sec", "", df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory_Bandwidth <- as.numeric(df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory <- sub(" MB", "", df[var_numericas]$Memory)
df[var_numericas]$Memory <- as.numeric(df[var_numericas]$Memory)
df[var_numericas]$Memory_Speed <- sub(" MHz", "", df[var_numericas]$Memory_Speed)
df[var_numericas]$Memory_Speed <- as.numeric(df[var_numericas]$Memory_Speed)
df[var_numericas]$Texture_Rate <- sub(" GTexel/s", "", df[var_numericas]$Texture_Rate)
df[var_numericas]$Texture_Rate <- as.numeric(df[var_numericas]$Texture_Rate)
df[var_cualitativas]$Direct_X <- sub("DX ", "", df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Direct_X <- gsub("*\\.[0]+", "", df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Direct_X <- as.factor(df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Open_GL <- as.factor(df[var_cualitativas]$Open_GL)
df[var_cualitativas]$Shader <- as.factor(df[var_cualitativas]$Shader)
df[var_cualitativas]$Release_Date <- sub("\n", "", df[var_cualitativas]$Release_Date)
df[var_cualitativas]$Release_Date <- gsub(" ", "", df[var_cualitativas]$Release_Date)
df[var_cualitativas]$Memory_Bus <- sub(" Bit", "", df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Memory_Bus <- gsub(" ", "", df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Memory_Bus <- as.factor(df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Resolution_WxH <- as.factor(df[var_cualitativas]$Resolution_WxH)
df[var_cualitativas]$Manufacturer <- as.factor(df[var_cualitativas]$Manufacturer)
df[var_binarias]$Dedicated <- df[var_binarias]$Dedicated == "Yes"
df[var_binarias]$Notebook_GPU <- df[var_binarias]$Notebook_GPU == "Yes"
df[var_binarias]$SLI_Crossfire <- df[var_binarias]$SLI_Crossfire == "Yes"
df[var_binarias]
df
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
path <- "path.txt"
path <- readChar(path, file.info(path)$size)
path <- gsub("[\r\n]", "", path)
setwd(path) #set the working directory
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df
rows <- dim(df)[1]
for (k in names(df)) {
l <- (sum(is.na(df[,k])) / rows)*100
print(k)
print(l)
}
var_numericas <- c("Core_Speed", "L2_Cache", "Max_Power", "Memory", "Memory_Bandwidth", "Memory_Speed", "TMUs", "Texture_Rate")
var_binarias <- c("Dedicated", "Notebook_GPU", "SLI_Crossfire");
var_cualitativas <- c("Direct_X","Architecture", "Manufacturer", "Memory_Type", "Open_GL", "Shader", "Name", "Resolution_WxH", "Release_Date", "Memory_Bus")
vars <- c(var_numericas, var_binarias, var_cualitativas)
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df[var_numericas]$Max_Power <- sub(" Watts", "", df[var_numericas]$Max_Power)
df[var_numericas]$L2_Cache <- sub("KB", "", df[var_numericas]$L2_Cache)
df[var_numericas]$L2_Cache <- as.numeric(df[var_numericas]$L2_Cache)
df$L2_Cache[df$L2_Cache == 0] <- NA
df[var_numericas]$Max_Power <- as.numeric(df[var_numericas]$Max_Power)
df[var_numericas]$Core_Speed <- sub(" MHz", "", df[var_numericas]$Core_Speed)
df$Core_Speed <- as.numeric(as.character(df$Core_Speed))
df[var_numericas]$Memory_Bandwidth <- sub("GB/sec", "", df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory_Bandwidth <- as.numeric(df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory <- sub(" MB", "", df[var_numericas]$Memory)
df[var_numericas]$Memory <- as.numeric(df[var_numericas]$Memory)
df[var_numericas]$Memory_Speed <- sub(" MHz", "", df[var_numericas]$Memory_Speed)
df[var_numericas]$Memory_Speed <- as.numeric(df[var_numericas]$Memory_Speed)
df[var_numericas]$Texture_Rate <- sub(" GTexel/s", "", df[var_numericas]$Texture_Rate)
df[var_numericas]$Texture_Rate <- as.numeric(df[var_numericas]$Texture_Rate)
df[var_cualitativas]$Direct_X <- sub("DX ", "", df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Direct_X <- gsub("*\\.[0]+", "", df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Direct_X <- as.factor(df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Open_GL <- as.factor(df[var_cualitativas]$Open_GL)
df[var_cualitativas]$Shader <- as.factor(df[var_cualitativas]$Shader)
df[var_cualitativas]$Release_Date <- sub("\n", "", df[var_cualitativas]$Release_Date)
df[var_cualitativas]$Release_Date <- gsub(" ", "", df[var_cualitativas]$Release_Date)
df[var_cualitativas]$Memory_Bus <- sub(" Bit", "", df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Memory_Bus <- gsub(" ", "", df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Memory_Bus <- as.factor(df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Resolution_WxH <- as.factor(df[var_cualitativas]$Resolution_WxH)
df[var_cualitativas]$Manufacturer <- as.factor(df[var_cualitativas]$Manufacturer)
df[var_binarias]$Dedicated <- df[var_binarias]$Dedicated == "Yes"
df[var_binarias]$Notebook_GPU <- df[var_binarias]$Notebook_GPU == "Yes"
df[var_binarias]$SLI_Crossfire <- df[var_binarias]$SLI_Crossfire == "Yes"
df[var_binarias]
df
all <- c(var_cualitativas, var_numericas, var_binarias)
df_selected <- df[all]
df_selected[df_selected == ""] <- NA
df_clean <- na.omit(df_selected)
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
path <- "path.txt"
path <- readChar(path, file.info(path)$size)
path <- gsub("[\r\n]", "", path)
setwd(path) #set the working directory
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df
rows <- dim(df)[1]
for (k in names(df)) {
l <- (sum(is.na(df[,k])) / rows)*100
print(k)
print(l)
}
var_numericas <- c("Core_Speed", "L2_Cache", "Max_Power", "Memory", "Memory_Bandwidth", "Memory_Speed", "TMUs", "Texture_Rate")
var_binarias <- c("Dedicated", "Notebook_GPU", "SLI_Crossfire");
var_cualitativas <- c("Direct_X","Architecture", "Manufacturer", "Memory_Type", "Open_GL", "Shader", "Name", "Resolution_WxH", "Release_Date", "Memory_Bus")
vars <- c(var_numericas, var_binarias, var_cualitativas)
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df[var_numericas]$Max_Power <- sub(" Watts", "", df[var_numericas]$Max_Power)
df[var_numericas]$L2_Cache <- sub("KB", "", df[var_numericas]$L2_Cache)
df[var_numericas]$L2_Cache <- as.numeric(df[var_numericas]$L2_Cache)
df$L2_Cache[df$L2_Cache == 0] <- NA
df[var_numericas]$Max_Power <- as.numeric(df[var_numericas]$Max_Power)
df[var_numericas]$Core_Speed <- sub(" MHz", "", df[var_numericas]$Core_Speed)
df$Core_Speed <- as.numeric(as.character(df$Core_Speed))
df[var_numericas]$Memory_Bandwidth <- sub("GB/sec", "", df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory_Bandwidth <- as.numeric(df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory <- sub(" MB", "", df[var_numericas]$Memory)
df[var_numericas]$Memory <- as.numeric(df[var_numericas]$Memory)
df[var_numericas]$Memory_Speed <- sub(" MHz", "", df[var_numericas]$Memory_Speed)
df[var_numericas]$Memory_Speed <- as.numeric(df[var_numericas]$Memory_Speed)
df[var_numericas]$Texture_Rate <- sub(" GTexel/s", "", df[var_numericas]$Texture_Rate)
df[var_numericas]$Texture_Rate <- as.numeric(df[var_numericas]$Texture_Rate)
df[var_cualitativas]$Direct_X <- sub("DX ", "", df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Direct_X <- gsub("*\\.[0]+", "", df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Direct_X <- as.factor(df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Open_GL <- as.factor(df[var_cualitativas]$Open_GL)
df[var_cualitativas]$Shader <- as.factor(df[var_cualitativas]$Shader)
df[var_cualitativas]$Release_Date <- sub("\n", "", df[var_cualitativas]$Release_Date)
df[var_cualitativas]$Release_Date <- gsub(" ", "", df[var_cualitativas]$Release_Date)
df[var_cualitativas]$Memory_Bus <- sub(" Bit", "", df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Memory_Bus <- gsub(" ", "", df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Memory_Bus <- as.factor(df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Resolution_WxH <- as.factor(df[var_cualitativas]$Resolution_WxH)
df[var_cualitativas]$Manufacturer <- as.factor(df[var_cualitativas]$Manufacturer)
df[var_binarias]$Dedicated <- df[var_binarias]$Dedicated == "Yes"
df[var_binarias]$Notebook_GPU <- df[var_binarias]$Notebook_GPU == "Yes"
df[var_binarias]$SLI_Crossfire <- df[var_binarias]$SLI_Crossfire == "Yes"
df[var_binarias]
df
all <- c(var_cualitativas, var_numericas, var_binarias)
df_selected <- df[all]
df_selected[df_selected == ""] <- NA
df_clean <- na.omit(df_selected)
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
path <- "path.txt"
path <- readChar(path, file.info(path)$size)
path <- gsub("[\r\n]", "", path)
setwd(path) #set the working directory
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df
rows <- dim(df)[1]
for (k in names(df)) {
l <- (sum(is.na(df[,k])) / rows)*100
print(k)
print(l)
}
var_numericas <- c("Core_Speed", "L2_Cache", "Max_Power", "Memory", "Memory_Bandwidth", "Memory_Speed", "TMUs", "Texture_Rate")
var_binarias <- c("Dedicated", "Notebook_GPU", "SLI_Crossfire");
var_cualitativas <- c("Direct_X","Architecture", "Manufacturer", "Memory_Type", "Open_GL", "Shader", "Name", "Resolution_WxH", "Release_Date", "Memory_Bus")
vars <- c(var_numericas, var_binarias, var_cualitativas)
df <- read.delim("All_GPUs.csv",sep = ',',header=T);
df[var_numericas]$Max_Power <- sub(" Watts", "", df[var_numericas]$Max_Power)
df[var_numericas]$L2_Cache <- sub("KB", "", df[var_numericas]$L2_Cache)
df[var_numericas]$L2_Cache <- as.numeric(df[var_numericas]$L2_Cache)
df$L2_Cache[df$L2_Cache == 0] <- NA
df[var_numericas]$Max_Power <- as.numeric(df[var_numericas]$Max_Power)
df[var_numericas]$Core_Speed <- sub(" MHz", "", df[var_numericas]$Core_Speed)
df$Core_Speed <- as.numeric(as.character(df$Core_Speed))
df[var_numericas]$Memory_Bandwidth <- sub("GB/sec", "", df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory_Bandwidth <- as.numeric(df[var_numericas]$Memory_Bandwidth)
df[var_numericas]$Memory <- sub(" MB", "", df[var_numericas]$Memory)
df[var_numericas]$Memory <- as.numeric(df[var_numericas]$Memory)
df[var_numericas]$Memory_Speed <- sub(" MHz", "", df[var_numericas]$Memory_Speed)
df[var_numericas]$Memory_Speed <- as.numeric(df[var_numericas]$Memory_Speed)
df[var_numericas]$Texture_Rate <- sub(" GTexel/s", "", df[var_numericas]$Texture_Rate)
df[var_numericas]$Texture_Rate <- as.numeric(df[var_numericas]$Texture_Rate)
df[var_cualitativas]$Direct_X <- sub("DX ", "", df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Direct_X <- gsub("*\\.[0]+", "", df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Direct_X <- as.factor(df[var_cualitativas]$Direct_X)
df[var_cualitativas]$Open_GL <- as.factor(df[var_cualitativas]$Open_GL)
df[var_cualitativas]$Shader <- as.factor(df[var_cualitativas]$Shader)
df[var_cualitativas]$Release_Date <- sub("\n", "", df[var_cualitativas]$Release_Date)
df[var_cualitativas]$Release_Date <- gsub(" ", "", df[var_cualitativas]$Release_Date)
df[var_cualitativas]$Memory_Bus <- sub(" Bit", "", df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Memory_Bus <- gsub(" ", "", df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Memory_Bus <- as.factor(df[var_cualitativas]$Memory_Bus)
df[var_cualitativas]$Resolution_WxH <- as.factor(df[var_cualitativas]$Resolution_WxH)
df[var_cualitativas]$Manufacturer <- as.factor(df[var_cualitativas]$Manufacturer)
df[var_binarias]$Dedicated <- df[var_binarias]$Dedicated == "Yes"
df[var_binarias]$Notebook_GPU <- df[var_binarias]$Notebook_GPU == "Yes"
df[var_binarias]$SLI_Crossfire <- df[var_binarias]$SLI_Crossfire == "Yes"
df[var_binarias]
df
all <- c(var_cualitativas, var_numericas, var_binarias)
df_selected <- df[all]
df_selected[df_selected == ""] <- NA
df_clean <- na.omit(df_selected)
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
for (i in all){
type <- df_selected[!is.na(df_selected[,i]),][1,i]
if (is.numeric(type)) {
Q <- calcQ(df_selected[,i])
l <- which((df_selected$Core_Speed>Q$souts) || (df_selected$Core_Speed<Q$souti) || (df_selected$Core_Speed<0))
df[l, i] <- NA
}
if (is.factor(type) || typeof(type) == "character" && !is.numeric(type)) {
l <- which(is.na(df_selected[,i]))
length(l)
df_selected[,i] <- as.character(df_selected[,i])
df_selected[l,i] <- paste('unknown',i,sep = "")
df_selected[,i] <- as.factor(df_selected[,i])
}
}
df_selected
#Max Power
l <- which(df_selected$Max_Power <4)
df_selected[l, "Max_Power"] <- NA
#L2_Cache
l <-which(df_selected$L2_Cache == 0)
df_selected[l, "L2_Cache"] <- NA
var_aux <- df[,c("Architecture","Architecture")]
var_aux$count <- 1
var_aux <- aggregate(count ~ ., var_aux, FUN = sum)
View(var_aux)
var_aux <- df_clean[,c("Architecture","Architecture")]
var_aux$count <- 1
var_aux <- aggregate(count ~ ., var_aux, FUN = sum)
barplot3d(rows=length(var_aux$Architecture), cols = length(var_aux$Name), z = var_aux$count, ylabels = var_aux$Name,  xlabels = var_aux$Architecture)
library(barplot3d)
var_aux <- df_clean[,c("Architecture","Architecture")]
var_aux$count <- 1
var_aux <- aggregate(count ~ ., var_aux, FUN = sum)
barplot3d(rows=length(var_aux$Architecture), cols = length(var_aux$Name), z = var_aux$count, ylabels = var_aux$Name,  xlabels = var_aux$Architecture)
var_aux <- df_clean[,c("Architecture","Architecture")]
var_aux$count <- 1
var_aux <- aggregate(count ~ ., var_aux, FUN = sum)
View(var_aux)
barplot3d(rows=length(var_aux[,"Architecture"]), cols = length(var_aux[,"Architecture"]), z = var_aux$count, ylabels = var_aux[,"Architecture"],  xlabels = var_aux[,"Architecture"])
summary(dd)
summary(df)
par(ask=TRUE)
for (i in 1:length(var_numericas)){
for (j in 1:length(var_numericas)){
if (i != j){
plot(df[,var_numericas[i]], df[,var_numericas[j]], main = paste("Plot", var_numericas[i],var_numericas[j]), xlab = var_numericas[i], ylab = var_numericas[j])
var_aux <- dd[,c(var_numericas[i],var_numericas[j])]
var_aux$count <- 1
var_aux <- aggregate(count ~ ., var_aux, FUN = sum)
barplot3d(rows=length(df[,var_numericas[j]]), cols = length(df[,var_numericas[j]]), z = var_aux$count, ylabels = df[,var_numericas[j]],  xlabels = df[,var_numericas[j]])
}
}
}
dd <- read.table("clean_table.csv",header=T, sep=",", dec=".")
dataset<-"GPUs"
dim(dd)
n<-dim(dd)[1]
K<-dim(dd)[2]
n
K
for (i in 1:length(var_numericas)){
for (j in 1:length(var_numericas)){
if (i != j){
plot(df[,var_numericas[i]], df[,var_numericas[j]], main = paste("Plot", var_numericas[i],var_numericas[j]), xlab = var_numericas[i], ylab = var_numericas[j])
var_aux <- dd[,c(var_numericas[i],var_numericas[j])]
var_aux$count <- 1
var_aux <- aggregate(count ~ ., var_aux, FUN = sum)
barplot3d(rows=length(df[,var_numericas[j]]), cols = length(df[,var_numericas[j]]), z = var_aux$count, ylabels = df[,var_numericas[j]],  xlabels = df[,var_numericas[j]])
}
}
}
for (i in 1:length(var_numericas)){
for (j in 1:length(var_numericas)){
if (i != j){
plot(df[,var_numericas[i]], df[,var_numericas[j]], main = paste("Plot", var_numericas[i],var_numericas[j]), xlab = var_numericas[i], ylab = var_numericas[j])
var_aux <- dd[,c(var_numericas[i],var_numericas[j])]
var_aux$count <- 1
var_aux <- aggregate(count ~ ., var_aux, FUN = sum)
barplot3d(rows=length(df[,var_numericas[j]]), cols = length(df[,var_numericas[j]]), z = var_aux$count, ylabels = df[,var_numericas[j]],  xlabels = df[,var_numericas[j]])
}
}
}
for (i in 1:length(var_numericas)){
for (j in 1:length(var_numericas)){
if (i != j){
plot(dd[,var_numericas[i]], dd[,var_numericas[j]], main = paste("Plot", var_numericas[i],var_numericas[j]), xlab = var_numericas[i], ylab = var_numericas[j])
var_aux <- dd[,c(var_numericas[i],var_numericas[j])]
var_aux$count <- 1
var_aux <- aggregate(count ~ ., var_aux, FUN = sum)
barplot3d(rows=length(dd[,var_numericas[j]]), cols = length(dd[,var_numericas[j]]), z = var_aux$count, ylabels = dd[,var_numericas[j]],  xlabels = dd[,var_numericas[j]])
}
}
}
listOfColors<-rainbow(39)
par(ask=TRUE)
for (i in 1:length(var_numericas)){
for (j in 1:length(var_numericas)){
if (i != j){
plot(dd[,var_numericas[i]], dd[,var_numericas[j]], main = paste("Plot", var_numericas[i],var_numericas[j]), xlab = var_numericas[i], ylab = var_numericas[j])
# var_aux <- dd[,c(var_numericas[i],var_numericas[j])]
# var_aux$count <- 1
# var_aux <- aggregate(count ~ ., var_aux, FUN = sum)
# barplot3d(rows=length(dd[,var_numericas[j]]), cols = length(dd[,var_numericas[j]]), z = var_aux$count, ylabels = dd[,var_numericas[j]],  xlabels = dd[,var_numericas[j]])
}
}
}
par(ask=FALSE)
listOfColors<-rainbow(39)
par(ask=TRUE)
for (i in 1:length(var_numericas)){
for (j in 1:length(var_numericas)){
if (i != j){
plot(dd[,var_numericas[i]], dd[,var_numericas[j]], main = paste("Plot", var_numericas[i],var_numericas[j]), xlab = var_numericas[i], ylab = var_numericas[j])
var_aux <- dd[,c(var_numericas[i],var_numericas[j])]
var_aux$count <- 1
var_aux <- aggregate(count ~ ., var_aux, FUN = sum)
barplot3d(rows=length(dd[,var_numericas[j]]), cols = length(dd[,var_numericas[j]]), z = var_aux$count, ylabels = dd[,var_numericas[j]],  xlabels = dd[,var_numericas[j]])
}
}
}
listOfColors<-rainbow(39)
par(ask=TRUE)
for (i in 1:length(var_numericas)){
for (j in 1:length(var_numericas)){
if (i != j){
plot(dd[,var_numericas[i]], dd[,var_numericas[j]], main = paste("Plot", var_numericas[i],var_numericas[j]), xlab = var_numericas[i], ylab = var_numericas[j])
}
}
}
par(ask=FALSE)
#
#Profiling plots
path <- "path.txt"
path <- readChar(path, file.info(path)$size)
path <- gsub("[\r\n]", "", path)
setwd(path) #set the working directory
